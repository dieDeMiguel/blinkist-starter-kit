{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "font-card",
  "type": "registry:component",
  "title": "Font Card",
  "description": "Blinkist Font Card Component",
  "registryDependencies": [
    "theme",
    "card",
    "badge"
  ],
  "files": [
    {
      "path": "components/font-card.tsx",
      "content": "import { Badge } from \"@/components/ui/badge\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\n\ninterface FontWeight {\n  weight: number\n  style: string\n  url?: string\n}\n\ninterface FontFamily {\n  name: string\n  weights: FontWeight[]\n  description: string\n  externalSource?: string\n  externalUrl?: string\n}\n\nexport function FontCard({ font }: { font: FontFamily }) {\n  const weightNames: Record<number, string> = {\n    400: \"Regular\",\n    500: \"Medium\",\n    700: \"Bold\",\n  }\n\n  return (\n    <Card className=\"overflow-hidden\">\n      <CardHeader className=\"bg-gray-50\">\n        <div className=\"flex justify-between items-center\">\n          <CardTitle>{font.name}</CardTitle>\n          {font.externalSource && (\n            <Badge variant=\"outline\" className=\"ml-2\">\n              {font.externalSource}\n            </Badge>\n          )}\n        </div>\n        <CardDescription>{font.description}</CardDescription>\n      </CardHeader>\n      <CardContent className=\"pt-6\">\n        {font.weights.length > 0 ? (\n          <div className=\"space-y-4\">\n            <h3 className=\"text-sm font-medium text-gray-500\">Available Weights & Styles</h3>\n            <div className=\"grid gap-3\">\n              {font.weights.map((weight, index) => (\n                <div key={index} className=\"flex justify-between items-center p-3 bg-gray-50 rounded-md\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-8 h-8 bg-primary/10 rounded-full flex items-center justify-center text-primary font-medium\">\n                      {weight.weight.toString().charAt(0)}\n                    </div>\n                    <div>\n                      <p className=\"font-medium\">\n                        {weightNames[weight.weight] || weight.weight}\n                        {weight.style === \"italic\" ? \" Italic\" : \"\"}\n                      </p>\n                      <p className=\"text-xs text-gray-500\">Weight: {weight.weight}</p>\n                    </div>\n                  </div>\n                  {weight.url && (\n                    <a\n                      href={weight.url}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"text-xs text-primary hover:underline\"\n                    >\n                      View Font File\n                    </a>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        ) : (\n          <div className=\"p-4 bg-gray-50 rounded-md\">\n            <p className=\"text-sm text-gray-500\">\n              This font is loaded from an external source.\n              {font.externalUrl && (\n                <>\n                  <br />\n                  <a\n                    href={font.externalUrl}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"text-primary hover:underline\"\n                  >\n                    View External Stylesheet\n                  </a>\n                </>\n              )}\n            </p>\n          </div>\n        )}\n\n        <div className=\"mt-6\">\n          <h3 className=\"text-sm font-medium text-gray-500 mb-3\">Preview</h3>\n          <div\n            className=\"p-4 border rounded-md\"\n            style={{ fontFamily: font.name === \"CeraPRO\" ? \"CeraPRO, sans-serif\" : `\"${font.name}\", serif` }}\n          >\n            <p className=\"text-2xl mb-2\">The quick brown fox jumps over the lazy dog.</p>\n            <p className=\"text-base\">\n              Blinkist offers the key insights from top nonfiction in a made-for-mobile format.\n            </p>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n",
      "type": "registry:component"
    }
  ]
}